name: build-release-upload

on:
  push:
    tags: [ 'v*' ]

env:
  CARGO_TERM_COLOR: always
  APP_NAME: websockify-rs

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
    - name: Short tag
      id: short_tag
      if: ${{ startsWith(github.ref, 'refs/tags/v')  }}
      run: echo "::set-output name=tag::$(basename ${{ github.ref }})"
    outputs:
      tag: ${{ steps.short_tag.outputs.tag }}${{ steps.hash.outputs.tag }}
  
  build:
    runs-on: ${{ matrix.config.os }}
    needs: tag
    strategy:
      matrix: 
        config:
          #          - os: windows-latest
          #            target: x86_64-pc-windows-msvc
          #            suffix: ".exe"
          #          - os: macos-13
          #            target: x86_64-apple-darwin
          #            suffix: ""
          #          - os: macos-latest
          #            target: aarch64-apple-darwin
          #            suffix: ""
          #          - os: ubuntu-latest
          #            target: x86_64-unknown-linux-gnu
          #            suffix: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            suffix: ""
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build
      run: cargo build --release

    - name: Create release directory
      run: |
          mkdir ${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}
          cp target/release/${{ env.APP_NAME }}${{ matrix.config.suffix }} ${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}/
          cp README.md ${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}/
          cp LICENSE ${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag}}
        path: |
              ./${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Create release
      run: |
        gh release create ${{github.ref_name}} --draft --generate-notes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  upload:
    runs-on: ubuntu-latest
    needs: [release, tag]
    strategy:
      matrix: 
        config:
          #          - os: windows-latest
          #            target: x86_64-pc-windows-msvc
          #            suffix: ".exe"
          #          - os: macos-13
          #            target: x86_64-apple-darwin
          #            suffix: ""
          #          - os: macos-latest
          #            target: aarch64-apple-darwin
          #            suffix: ""
          #          - os: ubuntu-latest
          #            target: x86_64-unknown-linux-gnu
          #            suffix: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            suffix: ""
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}

    - name: ZIP archive
      run: zip -r ${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}.zip ${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}/

    - name: release artifacts
      run: |
        gh release upload ${{github.ref_name}} ./${{ env.APP_NAME }}-${{ matrix.config.target }}-${{ needs.tag.outputs.tag }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

